<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Unchase.FluentPerformanceMeter</name>
    </assembly>
    <members>
        <member name="T:Unchase.FluentPerformanceMeter.Attributes.IgnoreMethodPerformanceAttribute">
            <summary>
            Attribute to indicate that no performance watching will be performed for this method.
            </summary>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Attributes.MethodCallerAttribute">
            <summary>
            Attribute to add caller to method performance watching.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Attributes.MethodCallerAttribute.Caller">
            <summary>
            Caller.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Attributes.MethodCallerAttribute.#ctor(System.String)">
            <summary>
            Constructor for <see cref="T:Unchase.FluentPerformanceMeter.Attributes.MethodCallerAttribute"/>.
            </summary>
            <param name="caller"><see cref="P:Unchase.FluentPerformanceMeter.Attributes.MethodCallerAttribute.Caller"/>.</param>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Attributes.MethodCustomDataAttribute">
            <summary>
            Attribute to add custom data to method performance watching.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Attributes.MethodCustomDataAttribute.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Attributes.MethodCustomDataAttribute.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Attributes.MethodCustomDataAttribute.#ctor(System.String,System.Object)">
            <summary>
            Constructor for <see cref="T:Unchase.FluentPerformanceMeter.Attributes.MethodCustomDataAttribute"/>.
            </summary>
            <param name="key"><see cref="P:Unchase.FluentPerformanceMeter.Attributes.MethodCustomDataAttribute.Key"/>.</param>
            <param name="value"><see cref="P:Unchase.FluentPerformanceMeter.Attributes.MethodCustomDataAttribute.Value"/>.</param>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2">
            <summary>
            Class for configure and execute the code.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <typeparam name="TException">Type of exception of the exception handler.</typeparam>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2.#ctor">
            <summary>
            Default constructor for <see cref="T:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2"/>.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2.#ctor(Unchase.FluentPerformanceMeter.PerformanceMeter{`0})">
            <summary>
            Constructor for <see cref="T:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2"/>.
            </summary>
            <param name="performanceMeter"><see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2.WithoutWatching">
            <summary>
            Stop watching when executing the code.
            </summary>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2.WithExceptionHandler(System.Action{`1})">
            <summary>
            Set exception handler for executed code.
            </summary>
            <param name="exceptionHandler">Exception handler for executed code.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2.Execute``1(System.Func{``0},``0)">
            <summary>
            Execute the Func.
            </summary>
            <typeparam name="TResult">Type of result.</typeparam>
            <param name="func">Executed Func.</param>
            <param name="defaultResult">Default result if exception will occured.</param>
            <returns>
            Returns result.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2.ExecuteAsync``1(System.Threading.Tasks.ValueTask{``0},``0)">
            <summary>
            Execute the Task.
            </summary>
            <typeparam name="TResult">Type of result.</typeparam>
            <param name="task">Executed Task.</param>
            <param name="defaultResult">Default result if exception will occured.</param>
            <returns>
            Returns result.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2.Execute(System.Action,System.UInt32)">
            <summary>
            Execute the Action.
            </summary>
            <param name="action">Executed Action.</param>
            <param name="iterations">Number of executing Action iterations.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2.ExecuteAsync(System.Threading.Tasks.ValueTask,System.UInt32)">
            <summary>
            Execute the Task.
            </summary>
            <param name="task">Executed Task.</param>
            <param name="iterations">Number of executing Task iterations.</param>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilderExtensions">
            <summary>
            Extension methods for <see cref="T:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2"/>.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilderExtensions.WithoutWatching``2(Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder{``0,``1})">
            <summary>
            Stop watching when executing the code.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <typeparam name="TException">Type of exception of the exception handler.</typeparam>
            <param name="codeExecutorBuilder"><see cref="T:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilderExtensions.WithExceptionHandler``2(Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder{``0,``1},System.Action{``1})">
            <summary>
            Set exception handler for executed code.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <typeparam name="TException">Type of exception of the exception handler.</typeparam>
            <param name="codeExecutorBuilder"><see cref="T:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2"/>.</param>
            <param name="exceptionHandler">Exception handler for executed code.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilderExtensions.Start``2(Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder{``0,``1},System.Action,System.UInt32)">
            <summary>
            Execute the Action.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <typeparam name="TException">Type of exception of the exception handler.</typeparam>
            <param name="codeExecutorBuilder"><see cref="T:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2"/>.</param>
            <param name="action">Executed Action.</param>
            <param name="iterations">Number of executing Action iterations.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilderExtensions.StartAsync``2(Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder{``0,``1},System.Threading.Tasks.ValueTask,System.UInt32)">
            <summary>
            Execute the Task.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <typeparam name="TException">Type of exception of the exception handler.</typeparam>
            <param name="codeExecutorBuilder"><see cref="T:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2"/>.</param>
            <param name="task">Executed Task.</param>
            <param name="iterations">Number of executing Task iterations.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilderExtensions.Start``3(Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder{``0,``1},System.Func{``2},``2)">
            <summary>
            Execute the Func.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <typeparam name="TException">Type of exception of the exception handler.</typeparam>
            <typeparam name="TResult">Type of result.</typeparam>
            <param name="codeExecutorBuilder"><see cref="T:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2"/>.</param>
            <param name="func">Executed Func.</param>
            <param name="defaultResult">Default result if exception will occured.</param>
            <returns>
            Returns result.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilderExtensions.StartAsync``3(Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder{``0,``1},System.Threading.Tasks.ValueTask{``2},``2)">
            <summary>
            Execute the Task.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <typeparam name="TException">Type of exception of the exception handler.</typeparam>
            <typeparam name="TResult">Type of result.</typeparam>
            <param name="codeExecutorBuilder"><see cref="T:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2"/>.</param>
            <param name="task">Executed Task.</param>
            <param name="defaultResult">Default result if exception will occured.</param>
            <returns>
            Returns result.
            </returns>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder`1">
            <summary>
            Class for setting custom data for <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder`1.#ctor(Unchase.FluentPerformanceMeter.PerformanceMeter{`0})">
            <summary>
            Constructor for <see cref="T:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder`1"/>.
            </summary>
            <param name="performanceMeter"><see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder`1.AddCommands(Unchase.FluentPerformanceMeter.Models.IPerformanceCommand[])">
            <summary>
            Register commands which will be executed after the performance watching is completed.
            </summary>
            <param name="performanceCommands">Collection of the executed commands.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder`1.AddActions(System.Action{Unchase.FluentPerformanceMeter.Models.IPerformanceInfo}[])">
            <summary>
            Register actions which will be executed after the performance watching is completed.
            </summary>
            <param name="performanceActions">Collection of the executed actions.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder`1"/>.
            </returns>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilderExtensions">
            <summary>
            Extension methods for the <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilderExtensions.Commands``1(Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder{``0},Unchase.FluentPerformanceMeter.Models.IPerformanceCommand[])">
            <summary>
            Register commands which will be executed after the performance watching is completed.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="executedCommandsBuilder"><see cref="T:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder`1"/>.</param>
            <param name="performanceCommands">Collection of the executed commands.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilderExtensions.Command``1(Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder{``0},Unchase.FluentPerformanceMeter.Models.IPerformanceCommand)">
            <summary>
            Register command which will be executed after the performance watching is completed.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="executedCommandsBuilder"><see cref="T:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder`1"/>.</param>
            <param name="performanceCommand">Executed command.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilderExtensions.Action``1(Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder{``0},System.Action{Unchase.FluentPerformanceMeter.Models.IPerformanceInfo}[])">
            <summary>
            Register actions which will be executed after the performance watching is completed.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="executedCommandsBuilder"><see cref="T:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder`1"/>.</param>
            <param name="performanceActions">Collection of the executed actions.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilderExtensions.Action``1(Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder{``0},System.Action{Unchase.FluentPerformanceMeter.Models.IPerformanceInfo})">
            <summary>
            Register action which will be executed after the performance watching is completed.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="executedCommandsBuilder"><see cref="T:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder`1"/>.</param>
            <param name="performanceAction">Executed action.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.ExecutedCommandsBuilder`1"/>.
            </returns>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1">
            <summary>
            Class for create and configure <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1.WithExecutingOnComplete">
            <summary>
            Allows to register commands which will be executed after the performance watching is completed.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1.WithSettingData">
            <summary>
            Allows to configure method performance watching settings.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1.#ctor">
            <summary>
            Default constructor for <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1.#ctor(Unchase.FluentPerformanceMeter.PerformanceMeter{`0})">
            <summary>
            Constructor for <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </summary>
            <param name="performanceMeter"><see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1.Start">
            <summary>
            Start watching method performance.
            </summary>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilderExtensions">
            <summary>
            Extension methods for the <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilderExtensions.Start``1(Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder{``0})">
            <summary>
            Start watching method performance.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="performanceMeterBuilder"><see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1">
            <summary>
            Class for setting custom data for <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1.#ctor(Unchase.FluentPerformanceMeter.PerformanceMeter{`0})">
            <summary>
            Constructor for <see cref="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1"/>.
            </summary>
            <param name="performanceMeter"><see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1.WithHttpContextAccessor(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Set <see cref="T:Microsoft.AspNetCore.Http.IHttpContextAccessor"/> to get the ip address of the caller.
            </summary>
            <param name="httpContextAccessor"><see cref="T:Microsoft.AspNetCore.Http.IHttpContextAccessor"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1.WithExceptionHandler(System.Action{System.Exception})">
            <summary>
            Set Action to handle exceptions that occur.
            </summary>
            <param name="exceptionHandler">Action to handle exceptions that occur.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1.WithCaller(System.String)">
            <summary>
            Set caller name.
            </summary>
            <param name="caller">Caller name.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1.AddCustomData(System.String,System.Object)">
            <summary>
            Add custom data.
            </summary>
            <param name="key">Key.</param>
            <param name="value">Value.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1.AddCallerSourceData(System.String,System.Int32)">
            <summary>
            Add caller data.
            </summary>
            <param name="callerSource">Caller source.</param>
            <param name="callerSourceLineNumber">Caller source line number.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1"/>.
            </returns>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilderExtensions">
            <summary>
            Extension methods for the <see cref="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1"/>
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.SettingsBuilderExtensions.CallerFrom``1(Unchase.FluentPerformanceMeter.Builders.SettingsBuilder{``0},Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Set <see cref="T:Microsoft.AspNetCore.Http.IHttpContextAccessor"/> to get the ip address of the caller.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="settingsBuilder"><see cref="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1"/>.</param>
            <param name="httpContextAccessor"><see cref="T:Microsoft.AspNetCore.Http.IHttpContextAccessor"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.SettingsBuilderExtensions.ExceptionHandler``1(Unchase.FluentPerformanceMeter.Builders.SettingsBuilder{``0},System.Action{System.Exception})">
            <summary>
            Set Action to handle exceptions that occur.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="settingsBuilder"><see cref="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1"/>.</param>
            <param name="exceptionHandler">Action to handle exceptions that occur.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.SettingsBuilderExtensions.CallerFrom``1(Unchase.FluentPerformanceMeter.Builders.SettingsBuilder{``0},System.String)">
            <summary>
            Set caller name.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="settingsBuilder"><see cref="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1"/>.</param>
            <param name="caller">Caller name.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.SettingsBuilderExtensions.CustomData``1(Unchase.FluentPerformanceMeter.Builders.SettingsBuilder{``0},System.String,System.Object)">
            <summary>
            Add custom data.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="settingsBuilder"><see cref="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1"/>.</param>
            <param name="key">Key.</param>
            <param name="value">Value.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Builders.SettingsBuilderExtensions.CallerSourceData``1(Unchase.FluentPerformanceMeter.Builders.SettingsBuilder{``0},System.String,System.Int32)">
            <summary>
            Add caller data.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="settingsBuilder"><see cref="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1"/>.</param>
            <param name="callerSource">Caller source.</param>
            <param name="callerSourceLineNumber">Caller source line number.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.SettingsBuilder`1"/>.
            </returns>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Extensions.CommonExtensions">
            <summary>
            Common extension methods to use only in this project
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Extensions.CommonExtensions.Contains(System.String,System.String,System.StringComparison)">
            <summary>
            Checks if a string contains another one.
            </summary>
            <param name="s">The string to check for presence in.</param>
            <param name="value">The value to check presence of.</param>
            <param name="comparison">The <see cref="T:System.StringComparison"/> to use when comparing.</param>
            <returns>Whether <paramref name="value"/> is contained in <paramref name="s"/>.</returns>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Extensions.PerformanceInfoStepExtensions">
            <summary>
            Extension methods for <see cref="T:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1"/>.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Extensions.PerformanceInfoStepExtensions.AddCustomData``1(Unchase.FluentPerformanceMeter.PerformanceInfoStep{``0},System.String,System.Object)">
            <summary>
            Add custom data to performance meter step information.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="performanceInfoStep"><see cref="T:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1"/>.</param>
            <param name="key">Key.</param>
            <param name="value">Value.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Extensions.PerformanceInfoStepExtensions.WithoutWatching``1(Unchase.FluentPerformanceMeter.PerformanceInfoStep{``0})">
            <summary>
            Silences a performance meter for the duration, use in a using to silence for the duration.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="performanceInfoStep"><see cref="T:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1"/>.
            </returns>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Extensions.PerformanceMeterBaseOptionsExtensions">
            <summary>
            Handy extensions for <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeterBaseOptions"/>.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Extensions.PerformanceMeterBaseOptionsExtensions.ExcludeMethod``1(``0,System.String)">
            <summary>
            Excludes a method from performance watching, convenience method for chaining, basically <see cref="P:Unchase.FluentPerformanceMeter.PerformanceMeterBaseOptions.ExcludedMethods"/>.Add(name)
            </summary>
            <typeparam name="T">The subtype of <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeterBaseOptions"/> to use (inferred for common usage).</typeparam>
            <param name="options">The options to exclude the method on.</param>
            <param name="method">The method name to exclude from performance watching.</param>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Extensions.PerformanceMeterExtensions">
            <summary>
            Extension methods for <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Extensions.PerformanceMeterExtensions.Step``1(Unchase.FluentPerformanceMeter.PerformanceMeter{``0},System.String)">
            <summary>
            Add performance meter step.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="performanceMeter"><see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.</param>
            <param name="stepName">Step name.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Extensions.PerformanceMeterExtensions.StepIf``1(Unchase.FluentPerformanceMeter.PerformanceMeter{``0},System.String,System.Double)">
            <summary>
            Add performance meter step, but only saves when over <paramref name="minSaveMs"/>.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="performanceMeter"><see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.</param>
            <param name="stepName">Step name.</param>
            <param name="minSaveMs">The minimum time to take before this step is saved (e.g. if it’s fast, leave it out).</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Extensions.PerformanceMeterExtensions.Ignore``1(Unchase.FluentPerformanceMeter.PerformanceMeter{``0})">
            <summary>
            Silences a performance meter for the duration, use in a using to silence for the duration.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1"/>.
            </returns>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Models.IPerformanceCommand">
            <summary>
            Custom executed command interface.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.IPerformanceCommand.CommandName">
            <summary>
            Executed command name.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Models.IPerformanceCommand.Execute(Unchase.FluentPerformanceMeter.Models.IPerformanceInfo)">
            <summary>
            Execute command.
            </summary>
            <param name="performanceInfo"><see cref="T:Unchase.FluentPerformanceMeter.Models.IPerformanceInfo"/>.</param>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Models.IPerformanceInfo`1">
            <summary>
            Method performance information for specific class.
            </summary>
            <typeparam name="TClass">Class with public methods.</typeparam>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Models.IPerformanceInfo">
            <summary>
            Method performance information.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.IPerformanceInfo.MethodCalls">
            <summary>
            List of method calls information.
            </summary>
            <remarks>
            <see cref="T:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1"/>.
            </remarks>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.IPerformanceInfo.TotalActivity">
            <summary>
            List of total method calls count information.
            </summary>
            <remarks>
            <see cref="T:Unchase.FluentPerformanceMeter.Models.MethodCallsCount`1"/>.
            </remarks>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.IPerformanceInfo.CurrentActivity">
            <summary>
            List of current method calls count information.
            </summary>
            <remarks>
            <see cref="T:Unchase.FluentPerformanceMeter.Models.MethodCallsCount`1"/>.
            </remarks>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.IPerformanceInfo.UptimeSince">
            <summary>
            Uptime.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.IPerformanceInfo.TimerFrequency">
            <summary>
            Frequency of the timer as the number of ticks per second.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.IPerformanceInfo.ClassName">
            <summary>
            Class name.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.IPerformanceInfo.MethodNames">
            <summary>
            List of method names.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.IPerformanceInfo.CustomData">
            <summary>
            Custom data.
            </summary>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Models.IPerformanceInfoStepData">
            <summary>
            Performace meter step information.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.IPerformanceInfoStepData.StepName">
            <summary>
            Step name.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.IPerformanceInfoStepData.Elapsed">
            <summary>
            Performance meter step call duration.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.IPerformanceInfoStepData.StartTime">
            <summary>
            Step call start date.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.IPerformanceInfoStepData.EndTime">
            <summary>
            Step call end date.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.IPerformanceInfoStepData.CustomData">
            <summary>
            Custom data.
            </summary>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1">
            <summary>
            Method calls information.
            </summary>
            <typeparam name="T">Method with type <see cref="T:System.Reflection.MethodInfo"/>.</typeparam>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1.Method">
            <summary>
            Method information.
            </summary>
            <remarks>
            <see cref="T:System.Reflection.MethodInfo"/>.
            </remarks>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1.MethodName">
            <summary>
            Method name.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1.Elapsed">
            <summary>
            Method call duration.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1.Caller">
            <summary>
            Caller name.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1.StartTime">
            <summary>
            Method call start date.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1.EndTime">
            <summary>
            Method call end date.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1.CustomData">
            <summary>
            Custom data for a specific method call.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1.Steps">
            <summary>
            Collection of performance meter steps.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1.#ctor">
            <summary>
            Default constructor for <see cref="T:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1"/>.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1.#ctor(`0,System.TimeSpan,System.String,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{Unchase.FluentPerformanceMeter.Models.IPerformanceInfoStepData})">
            <summary>
            Constructor for <see cref="T:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1"/>.
            </summary>
            <param name="m"><see cref="P:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1.Method"/>.</param>
            <param name="elapsed">Elapsed time.</param>
            <param name="caller"><see cref="P:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1.Caller"/>.</param>
            <param name="ds"><see cref="P:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1.StartTime"/>.</param>
            <param name="customData"><see cref="P:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1.CustomData"/>.</param>
            <param name="steps"><see cref="P:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1.Steps"/>.</param>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Models.MethodCallsCount`1">
            <summary>
            Method calls count information.
            </summary>
            <typeparam name="T">Method with type <see cref="T:System.Reflection.MethodInfo"/>.</typeparam>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.MethodCallsCount`1.Method">
            <summary>
            Method information.
            </summary>
            <remarks>
            <see cref="T:System.Reflection.MethodInfo"/>.
            </remarks>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.MethodCallsCount`1.MethodName">
            <summary>
            Method name.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.MethodCallsCount`1.CallsCount">
            <summary>
            Method calls count.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Models.MethodCallsCount`1.#ctor">
            <summary>
            Default constructor for <see cref="T:Unchase.FluentPerformanceMeter.Models.MethodCallsCount`1"/>.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Models.MethodCallsCount`1.#ctor(`0)">
            <summary>
            Constructor for <see cref="T:Unchase.FluentPerformanceMeter.Models.MethodCallsCount`1"/>.
            </summary>
            <param name="m"><see cref="P:Unchase.FluentPerformanceMeter.Models.MethodCallsCount`1.Method"/>.</param>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Models.PerformanceInfo`1">
            <summary>
            Method performance information.
            </summary>
            <typeparam name="TClass">Class with public methods.</typeparam>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.PerformanceInfo`1.MethodCalls">
            <summary>
            List of method calls information.
            </summary>
            <remarks>
            <see cref="T:Unchase.FluentPerformanceMeter.Models.MethodCallInfo`1"/>.
            </remarks>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.PerformanceInfo`1.TotalActivity">
            <summary>
            List of total method calls count information.
            </summary>
            <remarks>
            <see cref="T:Unchase.FluentPerformanceMeter.Models.MethodCallsCount`1"/>.
            </remarks>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.PerformanceInfo`1.CurrentActivity">
            <summary>
            List of current method calls count information.
            </summary>
            <remarks>
            <see cref="T:Unchase.FluentPerformanceMeter.Models.MethodCallsCount`1"/>.
            </remarks>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.PerformanceInfo`1.UptimeSince">
            <summary>
            Uptime.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.PerformanceInfo`1.ClassName">
            <summary>
            Class name.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.PerformanceInfo`1.MethodNames">
            <summary>
            List of method names.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.PerformanceInfo`1.CustomData">
            <summary>
            Custom data.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.PerformanceInfo`1.TimerFrequency">
            <summary>
            Frequency of the timer as the number of ticks per second.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Models.PerformanceInfo`1.#ctor">
            <summary>
            Constructor for <see cref="T:Unchase.FluentPerformanceMeter.Models.PerformanceInfo`1"/>.
            </summary>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Models.PerformanceInfoStepData">
            <summary>
            Performace meter step information.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.PerformanceInfoStepData.StepName">
            <summary>
            Step name.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.PerformanceInfoStepData.Elapsed">
            <summary>
            Performance meter step call duration.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.PerformanceInfoStepData.StartTime">
            <summary>
            Step call start date.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.PerformanceInfoStepData.EndTime">
            <summary>
            Step call end date.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Models.PerformanceInfoStepData.CustomData">
            <summary>
            Custom data.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Models.PerformanceInfoStepData.#ctor(System.String,System.TimeSpan,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Constructor for <see cref="T:Unchase.FluentPerformanceMeter.Models.PerformanceInfoStepData"/>.
            </summary>
            <param name="stepName">Step name.</param>
            <param name="elapsed">Performance meter step call duration.</param>
            <param name="dateStart">Step call start date.</param>
            <param name="customData">Custom data.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Models.PerformanceInfoStepData.Create(System.String,System.TimeSpan,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create performance meter step data class instance.
            </summary>
            <param name="stepName">Step name.</param>
            <param name="elapsed">Performance meter step call duration.</param>
            <param name="dateStart">Step call start date.</param>
            <param name="customData">Custom data.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Models.PerformanceInfoStepData"/>.
            </returns>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.Performance`1">
            <summary>
            Additional class for performance information.
            </summary>
            <typeparam name="TClass">Class with public methods.</typeparam>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Performance`1.PerformanceInfo">
            <summary>
            Methods performance information.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.Performance`1.MethodCallsCacheTime">
            <summary>
            Time in minutes to clear list of the method calls.
            </summary>
            <remarks>
            <see cref="P:Unchase.FluentPerformanceMeter.Models.IPerformanceInfo.MethodCalls"/>.
            </remarks>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Performance`1.Input(System.Reflection.MethodInfo)">
            <summary>
            Start watching method performance.
            </summary>
            <param name="method">Method with type <see cref="T:System.Reflection.MethodInfo"/>.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Performance`1.Output(System.String,System.Reflection.MethodInfo,System.TimeSpan,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{Unchase.FluentPerformanceMeter.Models.IPerformanceInfoStepData})">
            <summary>
            Stop watching method performance.
            </summary>
            <param name="caller">Caller name.</param>
            <param name="method">Method with type <see cref="T:System.Reflection.MethodInfo"/>.</param>
            <param name="elapsed">Elapsed time from the running of a method.</param>
            <param name="dateStart">Method start date.</param>
            <param name="customData">Custom data for a specific method call.</param>
            <param name="steps">Performance meter steps.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.Performance`1.Reset">
            <summary>
            Clear all performance watching information.
            </summary>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Models.IPerformanceInfo"/>.
            </returns>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1">
            <summary>
            Class for starting and stopping method steps performance watching.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1.#ctor(Unchase.FluentPerformanceMeter.PerformanceMeter{`0},System.String,System.Double)">
            <summary>
            Private constructor for <see cref="T:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1"/>.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1.#cctor">
            <summary>
            Static constructor for <see cref="T:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1"/>.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1.Finalize">
            <summary>
            Destructor for <see cref="T:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1"/>.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1.WatchingStep(Unchase.FluentPerformanceMeter.PerformanceMeter{`0},System.String)">
            <summary>
            Create an instance of the class to watching method step performance.
            </summary>
            <param name="performanceMeter"><see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.</param>
            <param name="stepName">Step name.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1.WatchingStepIf(Unchase.FluentPerformanceMeter.PerformanceMeter{`0},System.String,System.Double)">
            <summary>
            Create an instance of the class to watching method step performance.
            </summary>
            <param name="performanceMeter"><see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.</param>
            <param name="stepName">Step name.</param>
            <param name="minSaveMs">The minimum time to take before this step is saved (e.g. if it’s fast, leave it out).</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1.AddCustomData(System.String,System.Object)">
            <summary>
            Add custom data to performance meter step information.
            </summary>
            <param name="key">Key.</param>
            <param name="value">Value.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1.GetAndRemoveCustomData``1(System.String)">
            <summary>
            Get and remove custom data from performance meter step information.
            </summary>
            <typeparam name="TResult">Type of custom data result.</typeparam>
            <param name="key">Key.</param>
            <returns>
            Returns typed result.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1.GetCustomData``1(System.String)">
            <summary>
            Get custom data from performance meter step information.
            </summary>
            <typeparam name="TResult">Type of custom data result.</typeparam>
            <param name="key">Key.</param>
            <returns>
            Returns typed result.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1.ClearCustomData">
            <summary>
            Clear custom data to performance meter step information.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1.WithoutWatching">
            <summary>
            Silences a performance meter for the duration, use in a using to silence for the duration.
            </summary>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceInfoStep`1.Dispose">
            <summary>
            Implement IDisposable.
            </summary>
            <remarks>
            Stop watching method step performance.
            </remarks>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1">
            <summary>
            Class for starting and stopping method performance watching.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.PerformanceMeter`1.MethodInfo">
            <summary>
            Method information.
            </summary>
            <returns>
            Returns method information with type <see cref="T:System.Reflection.MethodInfo"/>.
            </returns>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.PerformanceMeter`1.PerformanceInfo">
            <summary>
            Methods performance information.
            </summary>
            <returns>
            Return method performance information with type <see cref="T:Unchase.FluentPerformanceMeter.Models.PerformanceInfo`1"/>.
            </returns>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.PerformanceMeter`1.MethodCallsCacheTime">
            <summary>
            Time in minutes to clear list of the method calls.
            </summary>
            <remarks>
            <see cref="P:Unchase.FluentPerformanceMeter.Models.IPerformanceInfo.MethodCalls"/>.
            </remarks>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.PerformanceMeter`1.ExceptionHandler">
            <summary>
            Action to handle exceptions that occur.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.PerformanceMeter`1.RegisteredCommands">
            <summary>
            Collection of registered executed commands.
            </summary>
            <remarks>
            <see cref="T:Unchase.FluentPerformanceMeter.Models.IPerformanceCommand"/>.
            </remarks>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.PerformanceMeter`1.RegisteredActions">
            <summary>
            Collection of registered executed actions.
            </summary>
            <remarks>
            <see cref="T:Unchase.FluentPerformanceMeter.Models.IPerformanceCommand"/>.
            </remarks>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.PerformanceMeter`1.DefaultOptions">
            <summary>
            Settings for context-less settings access.
            For example, every <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/> deserialized from a store would have these settings.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.#ctor(System.Reflection.MethodInfo)">
            <summary>
            Private constructor for <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.#cctor">
            <summary>
            Static constructor for <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.Finalize">
            <summary>
            Destructor for <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.Configure``1(``0)">
            <summary>
            Saves the given <paramref name="options"/> as the global <see cref="P:Unchase.FluentPerformanceMeter.PerformanceMeter`1.DefaultOptions"/> available for use globally.
            These are intended to be used by global/background operations where normal context access isn't available.
            </summary>
            <typeparam name="T">The specific type of <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeterBaseOptions"/> to use.</typeparam>
            <param name="options">The options object to set for background access.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod(System.Reflection.MethodInfo)">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="method">Method with type <see cref="T:System.Reflection.MethodInfo"/>.</param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod(System.String)">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="methodName">Method name.</param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod(System.Action)">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``1(System.Action{``0})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`1"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``2(System.Action{``0,``1})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`2"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``3(System.Action{``0,``1,``2})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`3"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``4(System.Action{``0,``1,``2,``3})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`4"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``5(System.Action{``0,``1,``2,``3,``4})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`5"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``6(System.Action{``0,``1,``2,``3,``4,``5})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`6"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``7(System.Action{``0,``1,``2,``3,``4,``5,``6})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`7"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``8(System.Action{``0,``1,``2,``3,``4,``5,``6,``7})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`8"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``9(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`9"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``10(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`10"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``11(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`11"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``12(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`12"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``13(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`13"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``14(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`14"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``15(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`15"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``16(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`16"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``1(System.Func{``0})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`1"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``2(System.Func{``0,``1})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`2"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``3(System.Func{``0,``1,``2})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`3"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``4(System.Func{``0,``1,``2,``3})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`4"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``5(System.Func{``0,``1,``2,``3,``4})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`5"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``6(System.Func{``0,``1,``2,``3,``4,``5})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`6"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``7(System.Func{``0,``1,``2,``3,``4,``5,``6})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`7"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`8"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``9(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`9"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`10"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`11"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`12"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`13"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`14"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`15"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`16"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.WatchingMethod``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`17"/></param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.AddCustomData(System.String,System.Object)">
            <summary>
            Add common custom data of the class.
            </summary>
            <param name="key">Key.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.GetAndRemoveCustomData``1(System.String)">
            <summary>
            Get and remove custom data from performance meter information.
            </summary>
            <typeparam name="TResult">Type of custom data result.</typeparam>
            <param name="key">Key.</param>
            <returns>
            Returns typed result.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.GetCustomData``1(System.String)">
            <summary>
            Get custom data from performance meter information.
            </summary>
            <typeparam name="TResult">Type of custom data result.</typeparam>
            <param name="key">Key.</param>
            <returns>
            Returns typed result.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.RemoveCustomData(System.String)">
            <summary>
            Remove common custom data of the class.
            </summary>
            <param name="key">Key.</param>
            <returns>
            Returns typed result.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.ClearCustomData">
            <summary>
            Clear common custom data of the class.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.SetDefaultExceptionHandler(System.Action{System.Exception})">
            <summary>
            Set Action to handle exceptions that occur by default.
            </summary>
            <param name="exceptionHandler">Action to handle exceptions that occur.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.SetMethodCallsCacheTime(System.Int32)">
            <summary>
            Set the time in minutes to clear collection of the method calls.
            </summary>
            <param name="minutes">Time in minutes to clear list of the method calls.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.GetExceptionHandler">
            <summary>
            Get exception handler.
            </summary>
            <returns>
            Returns exception handler.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.GetDefaultExceptionHandler">
            <summary>
            Get default exception handler.
            </summary>
            <returns>
            Returns default exception handler.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.TryAddCustomData(System.String,System.Object)">
            <summary>
            Attempts to add the specified key and value to the custom data.
            </summary>
            <param name="key">Key.</param>
            <param name="value">Value.</param>
            <returns>
            Returns true if custom data was added.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.Print">
            <summary>
            Print performance information for this class.
            </summary>
            <returns>
            Returns performance information for this class.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching(System.String)">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="methodName">Method name.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching(System.Reflection.MethodInfo)">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="method">Method with type <see cref="T:System.Reflection.MethodInfo"/>.</param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.FluentPerformanceMeter.Builders.PerformanceMeterBuilder`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching(System.Action)">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``1(System.Action{``0})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`1"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``2(System.Action{``0,``1})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`2"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``3(System.Action{``0,``1,``2})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`3"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``4(System.Action{``0,``1,``2,``3})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`4"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``5(System.Action{``0,``1,``2,``3,``4})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`5"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``6(System.Action{``0,``1,``2,``3,``4,``5})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`6"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``7(System.Action{``0,``1,``2,``3,``4,``5,``6})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`7"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``8(System.Action{``0,``1,``2,``3,``4,``5,``6,``7})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`8"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``9(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`9"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``10(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`10"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``11(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`11"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``12(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`12"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``13(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`13"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``14(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`14"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``15(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`15"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``16(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="action"><see cref="T:System.Action`16"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``1(System.Func{``0})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`1"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``2(System.Func{``0,``1})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`2"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``3(System.Func{``0,``1,``2})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`3"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``4(System.Func{``0,``1,``2,``3})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`4"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``5(System.Func{``0,``1,``2,``3,``4})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`5"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``6(System.Func{``0,``1,``2,``3,``4,``5})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`6"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``7(System.Func{``0,``1,``2,``3,``4,``5,``6})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`7"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`8"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``9(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`9"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`10"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`11"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`12"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`13"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`14"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`15"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`16"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StartWatching``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16})">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="func"><see cref="T:System.Func`17"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.Reset">
            <summary>
            Clear all performance watching information.
            </summary>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Models.IPerformanceInfo"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.StopWatching">
            <summary>
            Stop watching method performance.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.Dispose">
            <summary>
            Implement IDisposable.
            </summary>
            <remarks>
            Stop watching method performance.
            </remarks>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.Executing``1">
            <summary>
            Allows execute configured Action or Func.
            </summary>
            <typeparam name="TException"></typeparam>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.Executing">
            <summary>
            Allows execute configured Action or Func.
            </summary>
            <returns>
            Returns <see cref="T:Unchase.FluentPerformanceMeter.Builders.CodeExecutorBuilder`2"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.Inline(System.Action,System.UInt32)">
            <summary>
            Execute the Action.
            </summary>
            <param name="action">Executed Action.</param>
            <param name="iterations">Number of executing Action iterations.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.InlineAsync(System.Threading.Tasks.ValueTask,System.UInt32)">
            <summary>
            Execute the Task.
            </summary>
            <param name="task">Executed Task.</param>
            <param name="iterations">Number of executing Task iterations.</param>
            <returns>
            Returns <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.Inline``1(System.Func{``0},``0)">
            <summary>
            Execute the Func.
            </summary>
            <typeparam name="TResult">Type of result.</typeparam>
            <param name="func">Executed Func.</param>
            <param name="defaultResult">Default result if exception will occured.</param>
            <returns>
            Returns result.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.InlineAsync``1(System.Threading.Tasks.ValueTask{``0},``0)">
            <summary>
            Execute the Func.
            </summary>
            <typeparam name="TResult">Type of result.</typeparam>
            <param name="task">Executed Task.</param>
            <param name="defaultResult">Default result if exception will occured.</param>
            <returns>
            Returns Task of result.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.InlineIgnored(System.Action,System.UInt32)">
            <summary>
            Execute the Action.
            </summary>
            <param name="action">Executed Action.</param>
            <param name="iterations">Number of executing Action iterations.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.InlineIgnoredAsync(System.Threading.Tasks.ValueTask,System.UInt32)">
            <summary>
            Execute the Task.
            </summary>
            <param name="task">Executed Task.</param>
            <param name="iterations">Number of executing Task iterations.</param>
            <returns>
            Returns <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.InlineIgnored``1(System.Func{``0},``0)">
            <summary>
            Execute the Func.
            </summary>
            <typeparam name="TResult">Type of result.</typeparam>
            <param name="func">Executed Func.</param>
            <param name="defaultResult">Default result if exception will occured.</param>
            <returns>
            Returns result.
            </returns>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.InlineIgnoredAsync``1(System.Threading.Tasks.ValueTask{``0},``0)">
            <summary>
            Execute the Func.
            </summary>
            <typeparam name="TResult">Type of result.</typeparam>
            <param name="task">Executed Task.</param>
            <param name="defaultResult">Default result if exception will occured.</param>
            <returns>
            Resturns Task of result.
            </returns>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.PerformanceMeterBaseOptions">
            <summary>
            Various configuration properties for Unchase.FluentPerformanceMeter.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.PerformanceMeterBaseOptions.Version">
            <summary>
            Assembly version of the Unchase.FluentPerformanceMeter.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.PerformanceMeterBaseOptions.VersionHash">
            <summary>
            The hash to use for file cache breaking, this is automatically calculated.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.PerformanceMeterBaseOptions.ExcludedMethods">
            <summary>
            Methods to exclude from performance watching.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.PerformanceMeterBaseOptions.UseIgnoreMethodPerformanceAttribute">
            <summary>
            Allow to use <see cref="T:Unchase.FluentPerformanceMeter.Attributes.IgnoreMethodPerformanceAttribute"/> for excluding from performance watching.
            Default value is true.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.PerformanceMeterBaseOptions.AddCustomDataFromCustomAttributes">
            <summary>
            Add custom data from custom attributes.
            Default value is true.
            </summary>
        </member>
        <member name="P:Unchase.FluentPerformanceMeter.PerformanceMeterBaseOptions.RegisterPerformanceMeterScope">
            <summary>
            Adds a scope service of the PerformanceMeter of Class.
            Default value is true.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.PerformanceMeterBaseOptions.OnConfigure">
            <summary>
            Called when passed to <see cref="M:Unchase.FluentPerformanceMeter.PerformanceMeter`1.Configure``1(``0)"/>.
            </summary>
        </member>
        <member name="T:Unchase.FluentPerformanceMeter.StringBuilderCache">
            <summary>
            Provides optimized access to StringBuilder instances
            Credit: Marc Gravell (@marcgravell), Stack Exchange Inc.
            </summary>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.StringBuilderCache.Get(System.Int32)">
            <summary>
            Obtain a StringBuilder instance; this could be a recycled instance, or could be new
            </summary>
            <param name="capacity">The capacity to start the fetched <see cref="T:System.Text.StringBuilder"/> at.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.StringBuilderCache.ToStringRecycle(System.Text.StringBuilder)">
            <summary>
            Get the string contents of a StringBuilder and recycle the instance at the same time
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder"/> to recycle.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.StringBuilderCache.ToStringRecycle(System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>
            Get the string contents of a StringBuilder and recycle the instance at the same time
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder"/> to recycle.</param>
            <param name="startIndex">The index to start at.</param>
            <param name="length">The amount of characters to get.</param>
        </member>
        <member name="M:Unchase.FluentPerformanceMeter.StringBuilderCache.Recycle(System.Text.StringBuilder)">
            <summary>
            Recycles a StringBuilder instance if possible
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder"/> to recycle.</param>
        </member>
    </members>
</doc>
